#include "pch.h"
#include "Figures.h"

// CIRCLE //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Унаследованная функция отрисовки.
void Circle::print(Ar60_30 & ws)
{
	for (int y = y0 - radius; y <= y0 + radius; ++y)
	{
		for (int x = x0 - radius; x <= x0 + radius; ++x)
		{
			if (x >= 0 && x < 60 && y >= 0 && y < 30)
			{
				if ((x - x0)*(x - x0) + (y - y0)*(y - y0) <= radius * radius)
				{
					ws[y][x] = '0';
				}
			}
		}
	}
}


// RECTANGLE ////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Функция отрисовки прямоугольника, унаследованная от предка.
void My::Rectangle::print(Ar60_30 & ws)
{
	for (int y = y0; y != (y0 + a); ++y) //Функция отрисовывает квадрат, перебирая по очереди содержимое рядов.
	{
		for (int x = x0; x != (x0 + 1.6*a); ++x)//Внутренний цикл печатает символы ряда. Большая сторона  увеличена в 1.6 раза.
		{
			if (x >= 0 && x < 60 && y >= 0 && y < 30)//Условие, предостерегающее от выхода за границы массива.
			{
				ws[y][x] = '0';
			}
		}
	}
}


// RHOMB ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Rhomb::print(Ar60_30 & ws)//Определение унаследованной виртуальной функции.
{
	for (size_t y = (y0 - diagonal / 2); y <= y0; ++y)
	{
		for (size_t x = (x0 - diagonal / 2); x <= (x0 + diagonal / 2); ++x)
		{
			if (x >= 0 && x < 60 && y >= 0 && y < 30)//Условие, предохраняющее от выхода за границы массива.
			{
				if (x >= x0 - (y - (y0 - diagonal / 2)) && x <= x0 + (y - (y0 - diagonal / 2)))
				{
					ws[y][x] = '0';
				}
			}
		}
	}

	for (size_t y = y0; y <= y0 + diagonal / 2; ++y)
	{
		for (size_t x = x0 - diagonal / 2; x <= x0 + diagonal / 2; ++x)
		{
			if (x >= 0 && x < 60 && y >= 0 && y < 30)//Условие, предохраняющее от выхода за границы массива.
			{
				if (x >= x0 - (y0 + diagonal / 2 - y) && x <= x0 + (y0 + +diagonal / 2 - y))
				{
					ws[y][x] = '0';
				}
			}
		}
	}
}


// SQUARE ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Функция отрисовки квадрата, унаследованная от предка.
void Square::print(Ar60_30 & ws)
{

	for (int y = y0; y != (y0 + a); ++y) //Функция отрисовывает квадрат, перебирая по очереди содержимое рядов.
	{
		for (int x = x0; x != (x0 + a); ++x)//Внутренний цикл печатает символы ряда
		{
			if (x >= 0 && x < 60 && y >= 0 && y < 30)//Условие, предостерегающее от выхода за границы массива.
			{
				ws[y][x] = '0';
			}
		}
	}
}


// TRIANGLE ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Triangle::print(Ar60_30 & ws)//Унаследованная функция отрисовки треугольника.
{
	for (size_t y = y0; y <= point_A_y; ++y)
	{
		for (size_t x = x0; x <= point_B_x; ++x)
		{
			if (x >= 0 && x < 60 && y >= 0 && y < 30)//Условие, предохраняющее от выхода за границы массива.
			{
				if (x - x0 < y - y0)
				{
					ws[y][x] = '0';
				}
			}
		}
	}
}
